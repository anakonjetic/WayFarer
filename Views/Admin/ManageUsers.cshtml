@using WayFarer.Model
@using WayFarer.Model.Enum
@model IEnumerable<User>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Users</title>
    <link rel="stylesheet" href="~/css/manageUsersStyle.css">
</head>
<body>
<section id="users-management">
    <div class="actions-header">
        <h2>Manage Users</h2>
    </div>

    <!-- Filter and Sort Bar -->
    <div class="filter-sort-bar">
        <label for="roleFilter">Filter by Role:</label>
        <select id="roleFilter" onchange="applyFilters()">
            <option value="">All Roles</option>
            <option value="Administrator">Administrator</option>
            <option value="Basic">Basic</option>
        </select>
        <label for="isActiveFilter">Active Status:</label>
        <select id="isActiveFilter" onchange="applyFilters()">
            <option value="">All Users</option>
            <option value="true">Active</option>
            <option value="false">Inactive</option>
        </select>

        <label for="sortOption">Sort by:</label>
        <select id="sortOption" onchange="applyFilters()">
            <option value="NameAsc">Name (A-Z)</option>
            <option value="NameDesc">Name (Z-A)</option>
            <option value="RoleAsc">Role (A-Z)</option>
            <option value="RoleDesc">Role (Z-A)</option>
        </select>
    </div>

    <!-- User Table -->
    <table class="users-table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Surname</th>
                <th>Email</th>
                <th>Username</th>
                <th>Role</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @await Html.PartialAsync("_FilterTableUsers", Model)
        </tbody>
    </table>
</section>
</body>

<script>
function applyFilters() {
    const roleFilter = encodeURIComponent(document.getElementById("roleFilter").value);
    const sortOption = encodeURIComponent(document.getElementById("sortOption").value);
    const isActiveFilter = encodeURIComponent(document.getElementById("isActiveFilter").value);

    fetch(`@Url.Action("FilterTableUsers", "Admin")?roleFilter=${roleFilter}&sortOption=${sortOption}&isActiveFilter=${isActiveFilter}`, {
        method: 'GET',
        headers: {
            'X-Requested-With': 'XMLHttpRequest'
        }
    })
    .then(response => response.text())
    .then(html => {
        document.querySelector('.users-table tbody').innerHTML = html;
    })
    .catch(error => console.error('Error fetching filtered data:', error));
}



function toggleUserStatus(userId) {
    fetch(`@Url.Action("ManageUsersToggleStatus", "Admin")?userId=${userId}`, {
        method: 'POST',
        headers: { 'X-Requested-With': 'XMLHttpRequest' }
    })
    .then(() => applyFilters())
    .catch(error => console.error('Error toggling user status:', error));
}

function changeUserRole(userId, newRole) {
    fetch(`@Url.Action("ManageUsersChangeRole", "Admin")?userId=${userId}&newRole=${newRole}`, {
        method: 'POST',
        headers: { 'X-Requested-With': 'XMLHttpRequest' }
    })
    .then(() => applyFilters())
    .catch(error => console.error('Error changing user role:', error));
}
</script>
